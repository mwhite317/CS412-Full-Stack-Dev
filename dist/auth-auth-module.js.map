{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.scss","./src/app/auth/auth.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/login/login.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        redirectTo: '/auth/login',\n        pathMatch: 'full',\n      },\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterComponent,\n      },\n    ],\n  },\n];\n\nexport const AuthRoutingModule = RouterModule.forChild(routes);\n","export default \".example-icon {\\n  padding: 0 14px;\\n}\\n\\n.example-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.example-card {\\n  width: 400px;\\n  margin: 10% auto;\\n}\\n\\n.mat-card-title {\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2F1dGguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJhdXRoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtaWNvbiB7XG4gIHBhZGRpbmc6IDAgMTRweDtcbn1cblxuLmV4YW1wbGUtc3BhY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi5leGFtcGxlLWNhcmQge1xuICB3aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogMTAlIGF1dG87XG59XG5cbi5tYXQtY2FyZC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbiJdfQ== */\";","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  imports: [SharedModule, AuthRoutingModule],\n  declarations: [LoginComponent, RegisterComponent],\n})\nexport class AuthModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  ValidationErrors,\n  AbstractControl,\n} from '@angular/forms';\n\nimport { AuthService } from '@app/shared/services';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../auth.component.scss'],\n})\nexport class RegisterComponent {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  passwordsMatchValidator(control: FormControl): ValidationErrors | null {\n    const password = control.root.get('password');\n    return password && control.value !== password.value\n      ? {\n          passwordMatch: true,\n        }\n      : null;\n  }\n\n  userForm = new FormGroup({\n    fullname: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    repeatPassword: new FormControl('', [Validators.required, this.passwordsMatchValidator]),\n  });\n\n  get fullname(): AbstractControl {\n    return this.userForm.get('fullname')!;\n  }\n\n  get email(): AbstractControl {\n    return this.userForm.get('email')!;\n  }\n\n  get password(): AbstractControl {\n    return this.userForm.get('password')!;\n  }\n\n  get repeatPassword(): AbstractControl {\n    return this.userForm.get('repeatPassword')!;\n  }\n\n  register(): void {\n    if (this.userForm.invalid) {\n      return;\n    }\n\n    const { fullname, email, password, repeatPassword } = this.userForm.getRawValue();\n\n    this.authService.register(fullname, email, password, repeatPassword).subscribe(data => {\n      this.router.navigate(['']);\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '@app/shared/services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../auth.component.scss'],\n})\nexport class LoginComponent {\n  email: string | null = null;\n  password: string | null = null;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  login(): void {\n    this.authService.login(this.email!, this.password!).subscribe(() => {\n      this.router.navigateByUrl('/');\n    });\n  }\n}\n","export default \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Register</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"example-form\\\">\\n      <table cellspacing=\\\"0\\\" [formGroup]=\\\"userForm\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Fullname\\\" formControlName=\\\"fullname\\\" name=\\\"fullname\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" name=\\\"email\\\" required>\\n              <mat-error *ngIf=\\\"email.invalid && email.hasError('email')\\\">Invalid email address</mat-error>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Repeat Password\\\" formControlName=\\\"repeatPassword\\\" type=\\\"password\\\" name=\\\"repeatPassword\\\" required>\\n              <mat-error *ngIf=\\\"repeatPassword.invalid && repeatPassword.hasError('passwordMatch')\\\">Password mismatch</mat-error>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"register()\\\" color=\\\"primary\\\">Register</button>\\n    <span>Allrady have an account ? <a [routerLink]=\\\"['/auth/login']\\\">login</a> here</span>\\n  </mat-card-actions>\\n</mat-card>\\n\";","export default \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Login</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"example-form\\\">\\n      <table cellspacing=\\\"0\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n    <span>Don't have an account ? <a [routerLink]=\\\"['/auth/register']\\\" >register</a> here</span>\\n  </mat-card-actions>\\n</mat-card>\\n\";"],"sourceRoot":"webpack:///"}